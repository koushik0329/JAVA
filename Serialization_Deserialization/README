Serialization
The process of converting an object into a byte stream. Persists (saves the state) the object after the program exits This byte stream can be saved as a file or sent over a network and Can be sent to a different machine. Byte stream can be saved as a file (.ser) which is platform independent (Think of this as if you're saving a file with the object's information)

Deserialization 
The reverse process of converting a byte stream into an object.
(Think of this as if you're loading a saved file)

Steps for Serialization

1. Your object class should implement Serializable interface

2. add import java.io.Serializable;

3. FileOutputStream fileOut = new FileOutputStream(file path)

4. ObjectOutputStream out = new ObjectOutputStream(fileOut);

5. out.writeObject(objectName)

6. out.close(); fileOut.close();

Steps for Deserialization

1. Declare your object (don't instantiate)

2. Your class should implement Serializable interface

3. add import java.io.Serializable;

4. FileInputStream fileIn = new FileInputStream(file path);

5. ObjectInputStream in = new ObjectInputStream(fileIn);

6. objectNam = (Class) in.readObject();

7. in.close(); fileIn.close()


                                                                                                                                                                                                                                                                                                      
